import cv2
from PIL import Image
import torch
from PIL import ImageDraw
from PIL import ImageFont
import numpy as np
# 加载模型
model = torch.hub.load('ultralytics/yolov5', 'custom', path='D:\桌面D盘\Yolov5-deepsort-driverDistracted-driving-behavior-detection-1.0\weights\\best.pt')

# 打开摄像头
cap = cv2.VideoCapture(0)

while True:
    # 读取一帧图像
    ret, frame = cap.read()

    # 如果读取成功，进行预测
    if ret:
        # 将图像从BGR格式转换为RGB格式
        rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

        # 将图像转换为PIL格式
        pil_frame = Image.fromarray(rgb_frame)

        # 进行预测
        results = model(pil_frame)

        # 获取检测结果
        detections = results.xyxy[0]

        # 在原始图像上绘制预测结果
        results.render()
        annotated_frame = results.render()[0]

        # 将图像从RGB格式转换为BGR格式
        bgr_frame = cv2.cvtColor(annotated_frame, cv2.COLOR_RGB2BGR)

        # 遍历检测结果
        for *xyxy, conf, cls in detections:
            # 如果类别为phone
            if cls == 2:
                # 如果置信度大于0.5
                if conf > 0.5:
                    # 输出提醒信息
                    print('正在使用手机')
                    # 在图像上绘制提醒信息
                    pil_frame = Image.fromarray(bgr_frame)
                    draw = ImageDraw.Draw(pil_frame)
                    font = ImageFont.truetype('simhei.ttf', 32)
                    draw.text((10, 50), '正在使用手机', fill=(0, 0, 255), font=font)
                    bgr_frame = cv2.cvtColor(np.array(pil_frame), cv2.COLOR_RGB2BGR)
            # 如果类别为smoke
            elif cls == 1:
                # 如果置信度大于0.5
                if conf > 0.5:
                    # 输出提醒信息
                    print('正在吸烟')
                    # 在图像上绘制提醒信息
                    pil_frame = Image.fromarray(bgr_frame)
                    draw = ImageDraw.Draw(pil_frame)
                    font = ImageFont.truetype('simhei.ttf', 32)
                    draw.text((10, 100), '正在吸烟', fill=(0, 255, 0), font=font)
                    bgr_frame = cv2.cvtColor(np.array(pil_frame), cv2.COLOR_RGB2BGR)
            # 如果类别为drink
            elif cls == 3:
                # 如果置信度大于0.5
                if conf > 0.5:
                    # 输出提醒信息
                    print('正在喝水')
                    # 在图像上绘制提醒信息
                    pil_frame = Image.fromarray(bgr_frame)
                    draw = ImageDraw.Draw(pil_frame)
                    font = ImageFont.truetype('simhei.ttf', 32)
                    draw.text((10, 150), '正在喝水', fill=(255, 0, 0), font=font)
                    bgr_frame = cv2.cvtColor(np.array(pil_frame), cv2.COLOR_RGB2BGR)

        # 显示图像
        cv2.imshow('frame', bgr_frame)

    # 按下'q'键退出循环
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 释放摄像头并销毁所有窗口
cap.release()
cv2.destroyAllWindows()